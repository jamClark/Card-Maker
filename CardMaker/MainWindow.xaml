<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:CardDeficator" x:Name="MainWindow1" mc:Ignorable="d" x:Class="CardDeficator.MainWindow"
        Title="MainWindow" Height="524.6" Width="548.1" Loaded="Window_Loaded_1"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <ContextMenu x:Key="LimitedCardSetContextMenu" StaysOpen="true">
            <MenuItem Header="Add Set" Command="{Binding Source={StaticResource ContextMenu_AddSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
        </ContextMenu>
        <!--Label Styles -->
        <Style x:Key="LevelLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="IsEnabled" Value="False" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActiveCard.CardType}" Value="Ally">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AttackLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="IsEnabled" Value="False" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActiveCard.CardType}" Value="Ally">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DefenseLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="Content" Value="Defense" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActiveCard.CardType}" Value="Objective">
                    <Setter Property="Content" Value="HP" />
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ActiveCard.CardType}" Value="Ally">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Slider Stypes -->
        <Style x:Key="LevelSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="IsEnabled" Value="False" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActiveCard.CardType}" Value="Ally">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AttackSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="IsEnabled" Value="False" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActiveCard.CardType}" Value="Ally">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DefenseSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="IsEnabled" Value="False" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ActiveCard.CardType}" Value="Objective">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ActiveCard.CardType}" Value="Ally">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    <Grid x:Name ="MainGrid" Background="#FFBEC3D4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="84" MaxWidth="300"/>
            <ColumnDefinition Width="216.8"/>
        </Grid.ColumnDefinitions>
        
        <!-- Start Tree View -->
        <TreeView x:Name="treeviewCardSets" Margin="10,27,0.8,9.8" ContextMenu="{Binding LimitedCardSetContextMenu}" ItemsSource="{Binding ObservableCardSets}" AllowDrop="True">
            <TreeView.Resources>
                <ContextMenu x:Key="SetContextMenu" StaysOpen="true">
                    <MenuItem Header="Add Card" Command="{Binding Source={StaticResource ContextMenu_AddCardCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <Separator />
                    <MenuItem Header="Add Set" Command="{Binding Source={StaticResource ContextMenu_AddSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <MenuItem Header="Rename Set" Command="{Binding Source={StaticResource ContextMenu_RenameSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <Separator/>
                    <MenuItem Header="Import Card" Command="{Binding Source={StaticResource ContextMenu_ImportCardCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <Separator />
                    <MenuItem Header="Import Set" Command="{Binding Source={StaticResource ContextMenu_ImportSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <MenuItem Header="Export Set" Command="{Binding Source={StaticResource ContextMenu_ExportSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <Separator />
                    <MenuItem Header="Delete Card Set" Command="{Binding Source={StaticResource ContextMenu_RemoveSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                </ContextMenu>
                <ContextMenu x:Key="CardContextMenu" StaysOpen="true">
                    <MenuItem Header="Add Card" Command="{Binding Source={StaticResource ContextMenu_AddCardCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <Separator />
                    <MenuItem Header="Import Card" Command="{Binding Source={StaticResource ContextMenu_ImportCardCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <MenuItem Header="Export Card" Command="{Binding Source={StaticResource ContextMenu_ExportCardCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <Separator/>
                    <MenuItem Header="Add Set" Command="{Binding Source={StaticResource ContextMenu_AddSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <MenuItem Header="Rename Set" Command="{Binding Source={StaticResource ContextMenu_RenameSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                    <Separator />
                    <MenuItem Header="Delete Card" Command="{Binding Source={StaticResource ContextMenu_RemoveCardCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                </ContextMenu>
            </TreeView.Resources>
            
            <!-- setup default node styles. Leaves will override this below -->
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="AllowDrop" Value="True" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="ContextMenu" Value="{StaticResource SetContextMenu}" />
                    <Setter Property="Background" Value="Transparent" />
                    <EventSetter Event="TreeViewItem.DragOver" Handler="treeview_DragOver" />
                    <EventSetter Event="TreeViewItem.Drop" Handler="treeview_Drop" />
                    <EventSetter Event="TreeViewItem.PreviewMouseMove" Handler="treeview_MouseMove" />
                    <EventSetter Event="TreeViewItem.PreviewMouseLeftButtonDown" Handler="treeview_MouseDown" />
                    <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="trv_PreviewMouseRightButtonDown"/>
                    <EventSetter Event="TreeViewItem.PreviewMouseLeftButtonUp" Handler="treeview_MouseUp" />
                    <EventSetter Event="TreeViewItem.PreviewMouseRightButtonUp" Handler="treeview_MouseUp" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
            <!-- end styling -->
            
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal" Margin="4" Background="Transparent">
                        <CheckBox IsThreeState="False" Grid.Column="0" Margin="4" IsChecked="{Binding PrintStatus, UpdateSourceTrigger=PropertyChanged}" ToolTip="Check this to add to the printing queue.">
                            <CheckBox.Style>
                                <Style TargetType="{x:Type CheckBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLeaf}" Value="False">
                                            <Setter Property="IsThreeState"  Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <Image Grid.Column="1" x:Name="TreeIcon" SnapsToDevicePixels="true" Width="24" Height="24" Source="Images/CardSetIcon.png" />
                        <TextBlock Grid.Column="2" Margin="2" x:Name="ItemDisplayName" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <!-- Here we are going to change the control properties from roots to leaves -->
                    <HierarchicalDataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLeaf}" Value="True">
                            <Setter Property="AllowDrop" Value="True" />
                            <Setter TargetName="TreeIcon" Property="Source" Value="Images/CardIcon.png"/>
                            <Setter Property="ContextMenu" Value="{StaticResource CardContextMenu}" />
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                    <!-- end style override -->

                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            
            
        </TreeView>
        <!-- End Tree View -->
        
        <Label Content="Card Type" Grid.Column="1" HorizontalAlignment="Left" Margin="10.2,27,0,0" VerticalAlignment="Top"/>
        <Label Content="Card Title" Grid.Column="1" HorizontalAlignment="Left" Margin="10.2,58,0,0" VerticalAlignment="Top"/>
        <Label Content="Affiliation" Grid.Column="1" HorizontalAlignment="Left" Margin="10.2,89,0,0" VerticalAlignment="Top"/>
        <Label Style="{StaticResource LevelLabelStyle}" Content="Level" Grid.Column="1" HorizontalAlignment="Left" Margin="10.2,120,0,0" VerticalAlignment="Top"/>
        <Label Style="{StaticResource AttackLabelStyle}" Content="Attack" Grid.Column="1" HorizontalAlignment="Left" Margin="10.2,151,0,0" VerticalAlignment="Top"/>
        <Label Style="{StaticResource DefenseLabelStyle}" Grid.Column="1" HorizontalAlignment="Left" Margin="10.2,182,0,0" VerticalAlignment="Top"/>

        <ComboBox x:Name="comboCardType" Grid.Column="2" HorizontalAlignment="Left" Margin="10.2,27,0,0" VerticalAlignment="Top" Width="197" ItemsSource="{StaticResource CardTypeList}" DisplayMemberPath="Value" SelectedValuePath="Value" SelectedValue="{Binding Path=ActiveCard.CardType}"/>
        <TextBox x:Name="textboxCardTitle" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="10.2,58,0,0" TextWrapping="Wrap" Text="{Binding ActiveCard.Title, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="197"/>
        <ComboBox Grid.Column="2" HorizontalAlignment="Left" Margin="10.2,93,0,0" VerticalAlignment="Top" Width="196" ItemsSource="{StaticResource AffiliationList}" DisplayMemberPath="Value" SelectedValuePath="Value" SelectedValue="{Binding Path=ActiveCard.Affiliation}"/>

        <Slider Style="{StaticResource LevelSliderStyle}" x:Name="sliderLevel" Grid.Column="2" HorizontalAlignment="Left" Margin="10.2,125,0,0" VerticalAlignment="Top" Width="135" Value="{Binding Path=ActiveCard.Level, UpdateSourceTrigger=PropertyChanged}" Maximum="3" ToolTip="Power level of an ally or enhacement card." AutoToolTipPlacement="TopLeft" SmallChange="1" IsMoveToPointEnabled="True" IsSnapToTickEnabled="True" TickPlacement="TopLeft" Interval="1" Height="25" Foreground="#FF1C6019" Background="{x:Null}"/>
        <Slider Style="{StaticResource AttackSliderStyle}" x:Name="sliderAttack" Grid.Column="2" HorizontalAlignment="Left" Margin="10.2,155,0,0" VerticalAlignment="Top" Width="135" Value="{Binding Path=ActiveCard.Attack, UpdateSourceTrigger=PropertyChanged}" AutoToolTipPlacement="TopLeft" LargeChange="10" Maximum="100" SmallChange="5" TickFrequency="5" TickPlacement="TopLeft" ToolTip="The attack strength of an ally." IsMoveToPointEnabled="True" IsSnapToTickEnabled="True" Height="22" Foreground="#FFD80000" Interval="5"/>
        <Slider Style="{StaticResource DefenseSliderStyle}" x:Name="sliderDefense" Grid.Column="2" HorizontalAlignment="Left" Margin="10.2,186,0,0" VerticalAlignment="Top" Width="135" Value="{Binding Path=ActiveCard.Defense, UpdateSourceTrigger=PropertyChanged}" Foreground="#FF0006B9" AutoToolTipPlacement="TopLeft" LargeChange="10" Maximum="100" SmallChange="5" TickFrequency="5" TickPlacement="TopLeft" ToolTip="The defense of an ally." IsMoveToPointEnabled="True" IsSnapToTickEnabled="True" Interval="5"/>
        <CheckBox x:Name="checkboxExclusive" Content="Exclusive" Grid.Column="1" HorizontalAlignment="Left" Margin="15.2,213,0,0" VerticalAlignment="Top" IsChecked="{Binding Path=ActiveCard.Exclusive, UpdateSourceTrigger=PropertyChanged}" ToolTip="Signifies that only one of this card may be active at a time for the same controller."/>

        <TextBlock x:Name="textblockLevel" Grid.Column="2" HorizontalAlignment="Left" Margin="170.2,125,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding Path=ActiveCard.Level}" Width="37"/>
        <TextBlock x:Name="textblockAttack" Grid.Column="2" HorizontalAlignment="Left" Margin="170.2,156,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding Path=ActiveCard.Attack}" Width="37"/>
        <TextBlock x:Name="textblockDefense" Grid.Column="2" HorizontalAlignment="Left" Margin="170.2,187,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding Path=ActiveCard.Defense}" Width="37" Height="16"/>
        <TextBox Grid.ColumnSpan="2" Grid.Column="1" HorizontalAlignment="Left" Margin="15.2,234,0,9.8" TextWrapping="Wrap" Text="{Binding Path=ActiveCard.Description, UpdateSourceTrigger=PropertyChanged}" Width="275" SpellCheck.IsEnabled="True"/>
        <TextBox KeyDown="renamer_KeyDown" x:Name="textboxRenamer" LostFocus="renamer_LostFocus" HorizontalAlignment="Left" Height="23" Margin="10,13,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="221" IsEnabled="False" Visibility="Hidden"/>
        <Menu Height="20" VerticalAlignment="Top" Grid.ColumnSpan="3" Margin="0" UseLayoutRounding="False">
            <MenuItem Header="File">
                <MenuItem Header="Open Card Game" Command="{Binding Cmd, Source={StaticResource ContextMenu_OpenCardGameCmd}}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Separator/>
                <MenuItem Header="Append Card Game" Command="{Binding Cmd, Source={StaticResource ContextMenu_AppendCardGameCmd}}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Separator/>
                <MenuItem Header="Save Card Game" Command="{Binding Cmd, Source={StaticResource ContextMenu_SaveCardGameCmd}}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <Separator/>
                <MenuItem Header="Print" Command="{Binding Cmd, Source={StaticResource Menu_PrintCmd}}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Add Set" Command="{Binding Source={StaticResource ContextMenu_AddSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                <Separator/>
                <MenuItem Header="Import Set" Command="{Binding Source={StaticResource ContextMenu_ImportSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
                <MenuItem Header="Export Set" Command="{Binding Source={StaticResource ContextMenu_ExportSetCmd}, Path=Cmd}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"/>
            </MenuItem>
        </Menu>


    </Grid>
</Window>
